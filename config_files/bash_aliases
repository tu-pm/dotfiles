alias xampp='sudo /opt/lampp/manager-linux-x64.run'
alias open='xdg-open'
alias pim='xclip -selection clipboard -t image/png -o >'
alias vi='vim'
alias restart-gnome='sudo killall -3 gnome-shell'
alias noproxy='unset http_proxy https_proxy no_proxy'
alias venv='source ~/workspace/venv/bin/activate'

dict(){
  trans $@|more
}

git-sync(){
  remote=${1:-"origin"}
  branch=${2:-"master"}
  git add -A
  git commit -m "Synced at $(date +'%Y-%m-%d %T')"
  git push $remote $branch
}

git(){
  if [[ "$1" == "commit" ]]; then
    # If current remote branch is from github, use personal email
    # otherwise use viettel email
    remote=$(git status -sb | head -n1 | sed "s/.*\.\.\.\(.*\)\/.*/\1/")
    git remote -v | grep $remote | grep push | grep "github.com" > /dev/null
    if [[ "$?" == "0" ]]; then
      AUTHOR="Tu Pham <phamminhtubkhn@gmail.com>"
    else
      AUTHOR="Tu Pham <tupm4@viettel.com.vn>"
    fi
    command git "$@" --author "$AUTHOR"
  else
    command git "$@"
  fi
}

# Update tools & apps
code-update(){
  PKG=/tmp/code_latest_amd64.deb
  wget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O $PKG --no-check-certificate
  sudo dpkg -i $PKG
  rm $PKG
}

subl-update(){
  PKG=/tmp/subl_latest_amd64.deb
  wget download.sublimetext.com/latest/stable/linux/x64/deb -O $PKG --no-check-certificate
  sudo dpkg -i $PKG
  rm $PKG
}

go-update(){
  PKG=/tmp/go.tar.gz
  wget "https://dl.google.com/go/$(curl https://golang.org/VERSION?m=text).linux-amd64.tar.gz" -O $PKG --no-check-certificate
  sudo tar -xzf $PKG -C /usr/local/
  rm $PKG
}

pycharm-update(){
  PKG=/tmp/pycharm.tar.gz
  wget "https://download.jetbrains.com/product?code=PCA&latest&distribution=linux" -O $PKG --no-check-certificate
  sudo tar -xzf $PKG -C /opt/
  rm $PKG
  cd /opt/pycharm-*/bin
  sh pycharm.sh
  # At the welcome menu, click Configure > Create Desktop Entry to launch PyCharm from
}

goland-update(){
  PKG=/tmp/goland.tar.gz
  wget "https://download.jetbrains.com/product?code=GO&latest&distribution=linux" -O $PKG --no-check-certificate
  sudo tar -xzf $PKG -C /opt/
  rm $PKG
  cd /opt/GoLand-*/bin
  sh goland.sh
}

postman-update(){
  PKG=/tmp/postman.tar.gz
  wget "https://dl.pstmn.io/download/latest/linux" -O $PKG --no-check-certificate
  sudo tar -xzf $PKG -C /opt/
  rm $PKG
  cat << EOF > "${HOME}/.local/share/applications/postman.desktop"
[Desktop Entry]
Encoding=UTF-8
Version=1.0
Type=Application
Name=Postman
Icon=/opt/Postman/app/resources/app/assets/icon.png
Path=/opt/Postman
Exec=/opt/Postman/Postman
StartupNotify=false
StartupWMClass=Postman
OnlyShowIn=Unity;GNOME;
X-UnityGenerated=true
EOF
}

# Configure tools & apps
go-config(){
  EXEC=$(which go)
  if [[ $? -eq 0 ]]; then
    mkdir -p $HOME/go
    echo "export GOROOT=${EXEC:0:-7}" >> ~/.bashrc
    echo "export GOPATH=$HOME/go" >> ~/.bashrc
    echo "export PATH=\$GOPATH/bin:\$GOROOT/bin:\$PATH" >> ~/.bashrc
    source ~/.bashrc
  else
    echo "Please install golang on your system first."
  fi
}
