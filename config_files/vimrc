" Plugins
filetype plugin indent on                               " required
call plug#begin('~/.vim/plugged')
Plug 'scrooloose/nerdtree'                              " File management tree
Plug 'scrooloose/nerdcommenter'                         " Code commenter
Plug 'vim-airline/vim-airline'                          " Status bar
Plug 'vim-airline/vim-airline-themes'                   " Status bar themes
Plug 'ajmwagar/vim-deus'                                " Deus theme
Plug 'tpope/vim-fugitive'                               " Managing Git
Plug 'lepture/vim-jinja'                                " Jinja syntax
Plug 'Raimondi/delimitMate'                             " Auto closing quotes and brackets
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }      " Vim go
Plug 'Vimjas/vim-python-pep8-indent'                    " Properly indenting python files
call plug#end()

"=============================================================================
" Plugin Configurations

" > UltiSnips Configurations
let g:UltiSnipsEditSplit="vertical"

" > NERDTree Configurations
nmap <F10> :NERDTreeToggle<CR>

" > NERDCommenter Configurations
map <C-_> <plug>NERDCommenterToggle
imap <C-_> <ESC><plug>NERDCommenterToggle

" > Airline Configurations
let g:airline_theme="deus"

" > Deus theme configurations
augroup my_colors
  autocmd!
  autocmd ColorScheme deus hi SpellBad cterm=reverse
augroup END
set t_Co=256
set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set background=dark    " Setting dark mode
colorscheme deus
let g:deus_termcolors=256

" > Vim-go Configurations
let g:go_fmt_command = "goimports"

"=============================================================================
" User Configurations

"=============================================================================
" > Settings

" Indent using 4 spaces
set ts=2 sw=2 expandtab

" Use terminal theme instead of byobu
set background=dark

" Enable syntax highlighting
set syntax=enable
syntax on

" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowritebackup
set nowb
set noswapfile

" Disable bold font
set t_md=

" Highlight search
set hlsearch

" Make backspace works like other editors
set backspace=indent,eol,start

" Break line preserving words
set wrap
set linebreak

"=============================================================================
" > Mappings

" Map leader key to ','
let mapleader = ","

" Smart way to move between splits
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Unhighlight searched patterns by pressing Space key in normal mode
:noremap <silent> <Space> :silent noh<Bar>echo<CR>

" Replace visual selected text without yanking it
vnoremap p "_dP

" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Toggle line number
map <leader>ln :set invnumber<CR>

"=============================================================================
" > Autocmds

" Return to last edit position when opening files (You want this!)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Indent using two spaces in yaml files
autocmd FileType yaml setlocal ts=2 sw=2

" Trim trailing whitespaces on save
autocmd BufWritePre * %s/\s\+$//e
